;; -*-lisp-*-

(in-package :thesiswm)

;; Load swank.
(require 'swank)
(swank:create-server
 :port 4005
 :style swank:*communication-style*
 :dont-close t)

(load-module "ttf-fonts")
(set-font (make-instance 'xft:font :family "DejaVu Sans Mono" :subfamily "Book" :size 12))
(set-bg-color "white")
(set-fg-color "black")
(set-float-focus-color "white")
(set-float-unfocus-color "gray")

(declaim (optimize (debug 3)))
(setq *startup-message* nil)

(setq *default-command-list*
  '(((eval-command "delete") "Ø")
    ((eval-command "maximize 1 1 top left") "[▒▒]")
    ((eval-command "maximize 2 1 top left") "[▒_]")
    ((eval-command "maximize 2 1 top right") "[_▒]")
    ((eval-command "left") "«——")
    ((eval-command "right") "——»")
    ((funcall #'add-win-wrapped) "+++" )))

(setq *mouse-focus-policy* :sloppy)
(setq *debug-level* 0)
(redirect-all-output (data-dir-file "debug-output" "txt"))

;; Hard-coded number of clusters.
(defvar *cluster-count* 1)

;; change the prefix key to something else
(set-prefix-key (kbd "C-;"))

;; Make and switch to a floating group on startup.
(eval-command "gnewbg-float float" nil)
(eval-command "gkill" nil)

(define-key *root-map* (kbd "s-h") "pan-group 1920 0")
(define-key *root-map* (kbd "s-j") "pan-group 0 -1200")
(define-key *root-map* (kbd "s-k") "pan-group 0 1200")
(define-key *root-map* (kbd "s-l") "pan-group -1920 0")
(define-key *root-map* (kbd "s-o") "view-all-in-group")

(define-key *root-map* (kbd ".") "colon")

(defvar *views-map* nil)
(define-key *root-map* (kbd "V") "version")
(define-key *root-map* (kbd "v") '*views-map*)

(define-key *root-map* (kbd "quoteleft") "scale-up 10")
(define-key *root-map* (kbd "~") "scale-down 10")
(define-key *root-map* (kbd "@") "reset-scale")
(define-key *root-map* (kbd "]") "scale-up 100")
(define-key *root-map* (kbd "[") "scale-down 100")

(fill-keymap *views-map*
             (kbd "F1")    "record-view 1"
             (kbd "F2")    "record-view 2"
             (kbd "F3")    "record-view 3"
             (kbd "F4")    "record-view 4"
             (kbd "F5")    "record-view 5"
             (kbd "F6")    "record-view 6"
             (kbd "F7")    "record-view 7"
             (kbd "F8")    "record-view 8"
             (kbd "F9")    "record-view 9"
             (kbd "F10")   "record-view 10"
             (kbd "1")     "activate-view 1"
             (kbd "2")     "activate-view 2"
             (kbd "3")     "activate-view 3"
             (kbd "4")     "activate-view 4"
             (kbd "5")     "activate-view 5"
             (kbd "6")     "activate-view 6"
             (kbd "7")     "activate-view 7"
             (kbd "8")     "activate-view 8"
             (kbd "9")     "activate-view 9"
             (kbd "0")     "activate-view 10")

(defun list-to-string (lst)
  (format nil "~{~A~}" lst))

(run-shell-command "compton --dbus")
(run-shell-command "feh --bg-center ~/Pictures/background.png")
(run-shell-command "redshift")
